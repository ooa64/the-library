package require tcltest
namespace import -force ::tcltest::*

source library.tcl

foreach {n i c m u} {
    0 ""                  0 "" ""
    1 "XXX"               0 "" ""
    2 "XXX /"             0 "" ""
    3 "XXX / HTTP/"       0 "" ""
    4 "XXX / HTTP/1.0"    1 "XXX" "/"
    5 "PUT / HTTP/1.0"    1 "PUT" "/"
    6 "GET /xxx HTTP/1.0" 1 "GET" "/xxx"
} {

    test parserequest-1.0.$n "parserequest '$i'" {
        lassign {} M U
        list [library::parserequest $i M U] $M $U
    } [list $c $m $u]

    unset n i c m u M U
}

foreach {n i c u} {
    0 ""                             0 ""
    1 "Cookie:"                      0 ""
    2 "Cookie: libraryuser"          0 ""
    3 "Cookie: libraryuser="         0 ""
    4 "Cookie: libraryuser=XXX"      1 "XXX"
    5 "Cookie: libraryuser=XXX;"     1 "XXX"
    6 "Cookie: libraryuser = XXX "   1 "XXX"
    7 "Cookie: xxxxxlibraryuser=XXX" 0 ""
    9 "Cookie: xxx  libraryuser=XXX" 0 ""
    9 "Cookie: x=y; libraryuser=XXX" 1 "XXX"
} {

    test parseuser-1.1.$n "parserequest '$i'" {
        lassign {} U
        list [library::parseuser $i U] $U
    } [list $c $u]

    unset n i c u U
}

foreach {n i c r p} {
    0 ""         0 "" ""
    1 "XXX"      0 "" ""
    2 "/"        1 "/" ""
    3 "/?YYY"    1 "/" "?YYY"
    4 "/XXX?YYY" 1 "/XXX" "?YYY"
} {

    test parseuri-1.2.$n "parseuri '$i'" {
        lassign {} R P
        list [library::parseuri $i R P] $R $P
    } [list $c $r $p]

    unset n i c r p R P
}

foreach {n i p} {
    0 ""         {}
    1 "X"        {}
    2 "&"        {}
    3 "?"        {}
    4 "?&"       {}
    5 "?X"       {}
    6 "?X& "     {}
    7 "?X="      {}
    8 "?X=x"     {X x}
    9 "?X=x&"    {X x}
   10 "?X=x&Y=y" {X x Y y}
} {

    test params-1.3.$n "callparams '$i'" {
        library::params $i
    } $p

    unset n i p
}

test setvars-1.4.0 "setvars empty list" {
    list [library::setvars [dict create p1 v1]] [info exists p1]
} {{} 0}

test setvars-1.4.1 "setvars empty params" {
    list [library::setvars [dict create] p1] [info exists p1]
} {{} 0}

test setvars-1.4.2 "setvars" {
    list [library::setvars [dict create p1 v1] p1] $p1
} {p1 v1}

test setvars-1.4.5 "setvars" {
    list \
        [library::setvars [dict create p1 v1 p2 v2 p3 v3] p1 p3 p4] \
        [info exists p1] [info exists p2] [info exists p3] [info exists p4]
} {{p1 p3} 1 0 1 0}

test fields-1.5.1 "jsonfields" {
    library::jsonfields {a b}
} {'a',a,'b',b}

test fields-1.5.2 "selectfields" {
    library::selectfields {a b}
} {a,b}

test fields-1.5.3.1 "wherefields empty" {
    library::wherefields {}
} {true}

test fields-1.5.3.2 "wherefields" {
    library::wherefields {a b}
} {true and a=:a and b=:b}

test fields-1.5.4 "valuesfields" {
    library::valuesfields {a b}
} {:a,:b}

test fields-1.5.5 "updatefields" {
    library::updatefields {a b}
} {a=:a,b=:b}


cleanupTests
